@model SOTA.Models.SpecifikacRedactModel
@{
    ViewData["Title"] = "Создание спецификации";
}

<form method="post">
    <h3>Создание спецификации</h3>
    <div class="col-12 shadow p-3 mb-5 bg-white rounded">
        <div class="container">
            <div class="row">
                <div class="input-group wrap-input100 validate-input col-12 group">

                    <div class="input-group-prepend ">
                        <div class="input-group-text">
                            <i class="fas fa-comment-alt"></i>
                        </div>
                    </div>
                    <input type="hidden" class="form-control input100" id="id_spec" asp-for=@Model.Spec.Id />
                    <input type="text" class="form-control input100" id="nazv" asp-for=@Model.Spec.Name required />
                    <span class="focus-input100"></span>
                    <label class="label">Название спецификации</label>
                </div>

                <div class="input-group wrap-input100 validate-input col-4 group">
                    <div class="input-group-prepend ">
                        <div class="input-group-text">
                            <i class="fas fa-list-alt"></i>
                        </div>
                    </div>
                    <select id="tip" class="form-control input100" asp-for=@Model.Spec.Tip required>
                        @foreach (TipSpec tipspec in Model.TipSpecs)
                        {
                            <option value=@tipspec.Id>@tipspec.Name</option>
                        }
                    </select>
                    <span class="focus-input100"></span>
                    <label class="label">Тип работы</label>
                </div>

                <div class="input-group wrap-input100 validate-input col-4 group ">
                    <div class="input-group-prepend ">
                        <div class="input-group-text">
                            <i class="fas fa-list-ul"></i>
                        </div>
                    </div>
                    <select id="predmet" class="form-control input100" asp-for=@Model.Spec.Predm required>
                        @foreach (Predm predm in Model.Predms)
                        {
                            <option value=@predm.Id>
                                @predm.Name
                            </option>
                            ;
                        }
                    </select>
                    <span class="focus-input100"></span>
                    <label class="label">Предмет</label>
                </div>


                <div class="input-group wrap-input100 validate-input col-2 group">

                    <div class="input-group-prepend ">
                        <div class="input-group-text">
                            <i class="fas fa-graduation-cap"></i>
                        </div>
                    </div>
                    <input type="text" class="form-control input100" asp-for=@Model.Spec.Class pattern="[0-9]{1-2}" required />
                    <span class="focus-input100"></span>
                    <label class="label">Класс</label>
                </div>

                <div class="input-group wrap-input100 validate-input col-3 group">

                    <div class="input-group-prepend ">
                        <div class="input-group-text">
                            <i class="fas fa-calculator"></i>
                        </div>
                    </div>
                    <input type="number" class="form-control input100" id="var" asp-for=@Model.KolVar pattern="[0-9]{6,}" required />
                    <span class="focus-input100"></span>
                    <label class="label">Количество вариантов</label>
                </div>

                <div class="input-group wrap-input100 validate-input col-3 group">

                    <div class="input-group-prepend ">
                        <div class="input-group-text">
                            <i class="fas fa-calculator"></i>
                        </div>
                    </div>
                    <input type="number" class="form-control input100" asp-for=@Model.KolZad id="zadan" pattern="[0-9]{6,}" required />
                    <span class="focus-input100"></span>
                    <label class="label">Количество заданий</label>
                </div>

                <div class="input-group wrap-input100 validate-input col-3" style="height: 42px;">

                    <button href="#" class="btn btn-outline-success input100 btn-icon icon-left shadow" asp-controller="UprSpec" asp-action="IzmKolZadans" id="AddTabel">
                        <i class="fas fa-square-root-alt"></i>
                        <ya-tr-span data-index="147-0" data-value=" Default" data-translation="Сформировать" data-type="trSpan">Сформировать</ya-tr-span>
                    </button>

                    <span class="focus-input100"></span>
                </div>

                <div id="TableCreate" class="col-12 table-responsive-xl">


                </div>


            </div>
        </div>
    </div>
</form>
<script>
    window.onload = function () {
        generateTable();
    }
    function generateTable() {

        row = document.getElementById("zadan").value;
        coll = document.getElementById("var").value;

        n_spec = document.getElementById("id_spec").value;


        //nazv = document.getElementById("nazv").value;
        //tip = document.getElementById("tip").value;
        //predmet = document.getElementById("predmet").value;
        var model = '@Html.Raw(Json.Serialize(Model.Zadanies))';
        let Zadanies = new Array();
        Zadanies = JSON.parse(model);
        let numbers = new Map();


        for (var i = 0; i < Zadanies.length; i++)
            if (Zadanies[i].text != null) {

                numbers.set(Zadanies[i].variant + "," + Zadanies[i].nomer, 1);
                numbers.set( Zadanies[i].nomer + "b", Zadanies[i].ball);
            }
    else
            {

                numbers.set(Zadanies[i].variant + "," + Zadanies[i].nomer, 0);
                numbers.set(Zadanies[i].nomer + "b", Zadanies[i].ball);
            }

        console.log(numbers);
        var d = new Date();
        var options = {
            year: 'numeric',
            month: 'numeric',
            day: 'numeric'
        };
        date = d.toLocaleString("ru", options);
        collf = parseInt(coll) + 1;
        idz = nazv + tip + predmet + date;
        if (nazv == "" || tip == "" || predmet == "") {
            alert("Не заполненны поля" + date);
        }
        else {
            var elem = document.getElementById("TabelOtvet");
            if (elem) {
                var zamen = confirm("Удалить и заменить таблицу? Все связи и задания будут удалены");
            }
            if (zamen == false) {

            }
            else {

                if (elem) {
                    elem.remove();
                }
                var table = '<table class="table table-hover table-sm table-bordered shadow" id=\"TabelOtvet\">';
                table += '<thead class="table-yel"><tr><th></th>';
                for (var i = 1; i <= coll; i++) {
                    table += '<th >Вариант ' + i + '</th>';
                }



                table += ' <th width="150px">Количество баллов</th></tr></thead> <tbody>';



                for (var i = 1; i <= row; i++) {

                    table += '<tr class="text-center">';

                    for (var j = 1; j <= collf; j++) {
                        if (j == 1) {
                            table += "<td>" + i + "</td>";
                        }
                        if (j != collf) {

                            if (numbers.get(j + "," +i ) == 1)
                            {

                                table += "<td> <a href=/UprSpec/Zadanie?id_spec=" + n_spec + "&n_var=" + j + "&n_zad=" + i +" class='btn btn-icon btn-sm btn-outline-yel text-center btn-block ' style='wight:100%'>  <i class='fas fa-pencil-alt'></i>Изменить</a></td>";
                            }
                                else {
                                //table += "<td>Создать</td>";
                                table += "<td> <a href=/UprSpec/Zadanie?id_spec=" + n_spec + "&n_var=" + j + "&n_zad=" + i +" class='btn btn-icon btn-sm btn-outline-yel text-center btn-block '><i class='fas fa-plus'></i>Создать</a></td>";
                            }
                        }
                        else {
                            if (numbers.get(i + "b") != null) {


                                table += ' <td class=" wrap-input100 validate-input "><input type="number" class="form-control-sm input100 " id=Ball' + i + ' value=' + numbers.get(i + "b") + ' pattern="[0-9]{6,}" required  onchange="changedball(' + i + ',Ball' + i + ')" /><span class="focus-input100"></span></td>';
                            }
                            else {

                                table += ' <td class=" wrap-input100 validate-input "><input type="number" class="form-control-sm input100 " id=Ball' + i + ' value="1" pattern="[0-9]{6,}" required  onchange="changedball(' + i + ',Ball' + i + ')" /><span class="focus-input100"></span></td>';
                            }
                        }
                    }

                    table += '</tr>';

                }
                table += ' </tbody></table>';
                // document.getElementById('table').innerHTML = table;
                var div = document.createElement("div");
                var TableCreate = document.getElementById("TableCreate");

                TableCreate.innerHTML = table;
                TableCreate.after(div);
            }
        }

    }


    function changedball(n_zad, ball) {
        n_spec = document.getElementById("id_spec").value;

        jQuery.ajax({
            url: '/UprSpec/ChangedBallAjax/',
            type: "POST",
            dataType: "json",
            data: { n_zad: n_zad, n_spec: n_spec, ball:ball.value },
            success: function (data) {
                console.log(data);

            }
        });
    }
</script>
